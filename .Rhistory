library(BetterReg)
library(haven)
testlog <- read_sav("G:/My Drive/BetterReg/testlog.sav")
View(testlog)
testlog$physrec<-as.factor(testlog$physrec)
testlog$comply<-as.factor(testlog$comply)
testlog <- read_sav("G:/My Drive/BetterReg Workspace/testlog.sav")
testlog$physrec<-as.factor(testlog$physrec)
testlog$comply<-as.factor(testlog$comply)
library(haven)
testlog <- read_sav("G:/My Drive/BetterReg Workspace/testlog.sav")
save(testlog,file="G:/My Drive/BetterReg Workspace/testlog.RData")
load("G:/My Drive/BetterReg workspace/testlog.RData")
testlog$y<-as.factor(testlog$y)
testlog$x1<-as.factor(testlog$x1)
load("G:/My Drive/BetterReg workspace/testlog.RData")
testlog$x1<-as.factor(testlog$x1)
testlog$y<-as.factor(testlog$y)
save(testlog,file="G:/My Drive/BetterReg Workspace/testlog.RData")
load("G:/My Drive/BetterReg workspace/testlog.RData")
ry1=.0; ry2=.3; ry3=.3; ry4=.1; r12 = .0;
r13=.0; r14=.0; r23=.0; r24=.0;r34=0
pop <- MASS::mvrnorm(1000, mu = c(0, 0, 0, 0,0,0), Sigma = matrix(c(vary, ry1, ry2, ry3, ry4,ry5,
ry1, var1, r12, r13, r14,r15,
ry2, r12, var2, r23, r24,r25,
ry3, r13, r23, var3, r34,r35,
ry4, r14, r24, r34, var4,r45,
ry5,r15,r25,r35,r45,var5),
ncol = 6),
pop2 = data.frame(pop)
pop <- MASS::mvrnorm(1000, mu = c(0, 0, 0, 0,0,0), Sigma = matrix(c(vary, ry1, ry2, ry3, ry4,ry5,
ry1, var1, r12, r13, r14,r15,
ry2, r12, var2, r23, r24,r25,
ry3, r13, r23, var3, r34,r35,
ry4, r14, r24, r34, var4,r45,
ry5,r15,r25,r35,r45,var5),
ncol = 6))
pop2 = data.frame(pop)
pop <- MASS::mvrnorm(1000, mu = c(0, 0, 0, 0,0,0), Sigma = matrix(c(1, ry1, ry2, ry3, ry4,ry5,
ry1, 1, r12, r13, r14,r15,
ry2, r12, 1, r23, r24,r25,
ry3, r13, r23, 1, r34,r35,
ry4, r14, r24, r34, 1,r45,
ry5,r15,r25,r35,r45,1),
ncol = 6))
pop2 = data.frame(pop)
ry1=.0; ry2=.3; ry3=.3; ry4=.1; r12 = .0;
r13=.0; r14=.0; r23=.0; r24=.0;r34=0;ry5=.25; r15=.0; r25=0;r35=0; r45=0
pop <- MASS::mvrnorm(1000, mu = c(0, 0, 0, 0,0,0), Sigma = matrix(c(1, ry1, ry2, ry3, ry4,ry5,
ry1, 1, r12, r13, r14,r15,
ry2, r12, 1, r23, r24,r25,
ry3, r13, r23, 1, r34,r35,
ry4, r14, r24, r34, 1,r45,
ry5,r15,r25,r35,r45,1),
ncol = 6))
pop2 = data.frame(pop)
testreg = data.frame(pop)
save(testreg, file="G:/My Drive/BetterReg Workspace/testreg.RData)
save(testreg, file="G:/My Drive/BetterReg Workspace/testreg.RData")
model<-lm(y~x1+x2+x3+x4+x5,data=testlog)
model<-lm(y~x1+x2+x3+x4+x5,data=tesreg)
model<-lm(y~x1+x2+x3+x4+x5,data=testreg)
testreg<-dplyr::rename(testreg,y = X1, x1=X2, x2=X3, x3=X4, x4=X5, x5=X6)
model<-lm(y~x1+x2+x3+x4+x5,data=testreg)
tolerance<-function(model=NULL){
1/car::vif(model)}
tolerance(model = model)
save(testreg, file="G:/My Drive/BetterReg Workspace/testreg.RData")
library(BetterReg)
devtools::document()
devtools::load_all(".")
rm(list = c("tolerance"))
devtools::load_all(".")
devtools::document()
n<-model$df.residual
n
model
model$xlevels
model$model
nrow(model$model)
model
str(model)
nrow(model$y)
nrow(model$df.residual)
model$df.residual
#'Compute Mahalanobis Distance for Multiple Regression
#'
#'@param model name of model
#'@param pred number of predictors
#'@param values number of Mahal values to print (highst values)
#'
#'#'@examples
#'\donttest Mahal(model=mymodel, pred=2, values = 10)
#'
#'@return Mahalanobis Distance to detect MV outliers
#'@export
#'
#'
Mahal<-function(model=NULL, pred=NULL, values=NULL){
hat<-hatvalues(model)
n<-model$df.residual + pred + 1
nmah<-((n-1)*((hat)))-1
tail(sort(mah),values)
}
Mahal(model=model, pred=5)
#'Compute Mahalanobis Distance for Multiple Regression
#'
#'@param model name of model
#'@param pred number of predictors
#'@param values number of Mahal values to print (highst values)
#'
#'#'@examples
#'\donttest Mahal(model=mymodel, pred=2, values = 10)
#'
#'@return Mahalanobis Distance to detect MV outliers
#'@export
#'
#'
Mahal<-function(model=NULL, pred=NULL, values=NULL){
hat<-hatvalues(model)
n<-model$df.residual + pred + 1
mah<-((n-1)*((hat)))-1
tail(sort(mah),values)
}
Mahal(model=model, pred=5)
Mahal(model=model, pred=5, value = 10)
library(BetterReg)
library(BetterReg)
library(BetterReg)
library(BetterReg)
library(BetterReg)
library(BetterReg)
library(BetterReg)
library(BetterReg)
